'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _util = require('../util');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var getArrayItems = function getArrayItems(_ref) {
  var elements = _ref.elements;
  return _lodash2.default.map(elements, function (_ref2) {
    var value = _ref2.value;
    return value;
  });
};

var getObjectKeys = function getObjectKeys(_ref3) {
  var properties = _ref3.properties;

  var objectProperties = _lodash2.default.filter(properties, _util.isObjectProperty);

  return _lodash2.default.map(objectProperties, function (_ref4) {
    var _ref4$key = _ref4.key;
    _ref4$key = _ref4$key === undefined ? {} : _ref4$key;
    var name = _ref4$key.name;
    return name;
  });
};

var propVisitor = {
  AssignmentExpression: function AssignmentExpression(path, state) {
    var identifier = (0, _util.getExpressionIdentifier)(path);
    var right = path.node.right;


    if (!state.hasEntry(identifier)) return;

    if ((0, _util.isValidExpression)(path, ['handledProps']) && (0, _util.isArrayValue)(right)) {
      state.addProps(identifier, getArrayItems(right));
      path.remove();

      return;
    }

    if ((0, _util.isValidExpression)(path, ['defaultProps', 'propTypes']) && (0, _util.isObjectValue)(right)) {
      state.addProps(identifier, getObjectKeys(right));
    }
  },
  ClassProperty: function ClassProperty(path, state) {
    var declaration = (0, _util.getClassDeclaration)(path);
    if (!declaration) return;

    var identifier = (0, _util.getEntryIdentifier)(declaration);
    var value = path.node.value;


    if (!state.hasEntry(identifier) || !(0, _util.isStaticProperty)(path)) return;

    if ((0, _util.isValidProperty)(path, ['handledProps']) && (0, _util.isArrayValue)(value)) {
      state.addProps(identifier, getArrayItems(value));
      path.remove();

      return;
    }

    if ((0, _util.isValidProperty)(path, ['defaultProps', 'propTypes']) && (0, _util.isObjectValue)(value)) {
      state.addProps(identifier, getObjectKeys(value));
    }
  }
};

exports.default = propVisitor;