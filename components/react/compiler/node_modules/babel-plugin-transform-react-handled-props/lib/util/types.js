'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isValidProperty = exports.isValidExpression = exports.isStaticProperty = exports.isObjectValue = exports.isObjectProperty = exports.isArrayValue = undefined;

var _babelTypes = require('babel-types');

var t = _interopRequireWildcard(_babelTypes);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var isArrayValue = exports.isArrayValue = function isArrayValue(path) {
  return t.isArrayExpression(path);
};

var isObjectProperty = exports.isObjectProperty = function isObjectProperty(path) {
  return t.isObjectProperty(path);
};

var isObjectValue = exports.isObjectValue = function isObjectValue(path) {
  return t.isObjectExpression(path);
};

var isStaticProperty = exports.isStaticProperty = function isStaticProperty(_ref) {
  var node = _ref.node;
  return !!node.static;
};

var isValidExpression = exports.isValidExpression = function isValidExpression(_ref2, names) {
  var _ref2$node$left = _ref2.node.left,
      left = _ref2$node$left === undefined ? {} : _ref2$node$left;
  var property = left.property;
  var name = property.name;


  return t.isMemberExpression(left) && t.isIdentifier(property) && _lodash2.default.includes(names, name);
};

var isValidProperty = exports.isValidProperty = function isValidProperty(path, names) {
  var key = path.node.key;
  var name = key.name;


  return t.isIdentifier(key) && _lodash2.default.includes(names, name);
};